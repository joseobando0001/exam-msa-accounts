spring:
  r2dbc:
    url: r2dbc:h2:mem:///testdb
    username: sa
    password:
      driver: h2
  h2:
    console:
      enabled: true
  web-flux:
    base-path: /api/v1
  cloud:
    stream:
      bindings:
        consume-in-0:
          destination: topic_exam_account_movements
          group: $Group
      kafka:
        binder:
          configuration:
            sasl:
              mechanism: PLAIN
              jaas:
                config: org.apache.kafka.common.security.plain.PlainLoginModule required username='N5LYZOW2JXYIZK5C' password='jpwSdzwVVzVWBJw1RTFQRVpcpPtCG8YUyiVLBivpj+hpB12UlR44s8ppiKMp+Gdx';
            security:
              protocol: SASL_SSL
          brokers: pkc-619z3.us-east1.gcp.confluent.cloud:9092
          consumer:
            maxAttempts: 3
            backOffInitialInterval: 500
            backOffMaxInterval: 1000
            backOffMultiplier: 2.0
management:
  health:
    circuitbreakers:
      enabled: true
    indicators:
      resilience4j:
        enabled: true
  endpoints:
    web:
      exposure:
        include: health, prometheus, metrics # Expone endpoints de salud, Prometheus y m√©tricas
      base-path: /actuator
    export:
      prometheus:
        enabled: true

resilience4j:
  circuitbreaker:
    instances:
      default:
        registerHealthIndicator: true
        failureRateThreshold: 50
        slowCallRateThreshold: 100
        slowCallDurationThreshold: 5000ms
        waitDurationInOpenState: 10000ms
        permittedNumberOfCallsInHalfOpenState: 10
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
  timelimiter:
    instances:
      default:
        timeoutDuration: 3s
        cancelRunningFuture: true

logging:
  level:
    root: INFO
    io.github.resilience4j: TRACE

client:
  users: http://localhost:8080/api/v1/

server:
  port: 8082