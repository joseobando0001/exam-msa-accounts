openapi: 3.0.0
info:
  title: API for Accounts
  description: API for make operations for accounts & movements.
  version: 1.0.0
  contact:
    name: Jos√© Obando
    email: jose.obando_0001@hotmail.com
servers:
  - url: http://localhost:8080/api/v1/
    description: Development
tags:
  - name: Accounts
    description: Accounts Controller
  - name: Movements
    description: Movements Controller
  - name: Reports
    description: Reports Controller
paths:
  /accounts:
    post:
      tags:
        - Accounts
      summary: Create a new account
      operationId: PostAccount
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '201':
          description: Account successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
    get:
      tags:
        - Accounts
      summary: Retrieve all accounts
      operationId: GetAccountByFilter
      responses:
        '200':
          description: List of accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
  /accounts/{accountId}:
    get:
      tags:
        - Accounts
      summary: Retrieve details of a specific account
      operationId: GetAccountByAccountId
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Account details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
  /movements:
    post:
      tags:
        - Movements
      summary: Register a new transaction
      operationId: PostMovement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovementRequest'
      responses:
        '201':
          description: Movement message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovementMessage'
  /reports:
    get:
      tags:
        - Reports
      summary: Retrieve transactions filtered by date and user
      operationId: GetReportByFilter
      parameters:
        - name: clientId
          in: query
          schema:
            type: string
        - name: startDate
          in: query
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          schema:
            type: string
            format: date
        - name: reportType
          in: query
          description: "Type of report (pdf or excel)"
          required: true
          schema:
            type: string
            enum:
              - pdf
              - excel
      responses:
        '200':
          description: List of transactions
          content:
            application/json:
              schema:
                type: string
                format: byte
components:
  schemas:
    Account:
      type: object
      properties:
        accountNumber:
          type: string
          pattern: '^[0-9]+$'
        type:
          type: string
          enum: [ Savings, Checking ]
        initialBalance:
          type: number
        status:
          type: boolean
        client:
          type: string
          pattern: '^[0-9]+$'
    Movement:
      type: object
      properties:
        accountNumber:
          type: string
          pattern: '^[0-9]+$'
        type:
          type: string
          enum: [ Credit, Debit ]
        value:
          type: number
          minimum: 0.1
          maximum: 10000000000
        date:
          type: string
          format: date
        balance:
          type: number
        status:
          type: boolean
    MovementFilter:
      type: object
      properties:
        accountNumber:
          type: string
        client:
          type: string
        type:
          type: string
          enum: [ Savings, Checking ]
        value:
          type: number
        initBalance:
          type: number
        date:
          type: string
          format: date
        availableBalance:
          type: number
        typeMovement:
          type: string
          enum: [ Credit, Debit ]
        status:
          type: boolean
    MovementMessage:
      type: object
      properties:
        message:
          type: string
    MovementRequest:
      type: object
      properties:
        accountNumber:
          type: string
          pattern: '^[0-9]+$'
        type:
          type: string
          enum: [ Credit, Debit ]
        value:
          type: number
          minimum: 0.1
          maximum: 10000000000
