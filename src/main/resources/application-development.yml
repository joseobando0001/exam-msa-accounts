spring:
  r2dbc:
    url: r2dbc:h2:mem:///${DB_NAME}
    username: ${DB_USER}
    password:
      driver: h2
  h2:
    console:
      enabled: true
  web-flux:
    base-path: /api/v1/
  cloud:
    stream:
      bindings:
        consume-in-0:
          destination: ${TOPIC}
          group: ${GROUP}
      kafka:
        binder:
          configuration:
            sasl:
              mechanism: PLAIN
              jaas:
                config: org.apache.kafka.common.security.plain.PlainLoginModule required username='${KAFKA_USERNAME}' password='${KAFKA_PASSWORD}';
            security:
              protocol: SASL_SSL
          brokers: ${KAFKA_BROKER}
          consumer:
            maxAttempts: 3
            backOffInitialInterval: 500
            backOffMaxInterval: 1000
            backOffMultiplier: 2.0
management:
  health:
    circuitbreakers:
      enabled: true
    indicators:
      resilience4j:
        enabled: true
  endpoints:
    web:
      exposure:
        include: health, prometheus, metrics
      base-path: /actuator
    export:
      prometheus:
        enabled: true

resilience4j:
  circuitbreaker:
    instances:
      default:
        registerHealthIndicator: ${REGISTER_HEALTH}
        failureRateThreshold: ${FAILURE_RATE}
        slowCallRateThreshold: ${SLOW_CALL_RATE}
        slowCallDurationThreshold: ${SLOW_CALL_DURATION}
        waitDurationInOpenState: ${WAIT_DURATION}
        permittedNumberOfCallsInHalfOpenState: ${PERMITTED_NUMBER_CALLS}
        slidingWindowSize: ${SLIDING_SIZE}
        slidingWindowType: ${SLIDING_TYPE}
        minimumNumberOfCalls: ${MINIMUM_CALLS}
        automaticTransitionFromOpenToHalfOpenEnabled: ${AUTOMATIC_TRANSITION}
  timelimiter:
    instances:
      default:
        timeoutDuration: ${TIMEOUT}
        cancelRunningFuture: ${CANCEL_RUNNING}

logging:
  level:
    root: ${LOG_LEVEL_RESILIENCE}
    io.github.resilience4j: ${LOG_LEVEL_ROOT}

client:
  users: ${CLIENT_MSA_USERS}

server:
  port: 8081